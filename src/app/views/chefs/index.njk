{% extends "chefs/layout2.njk" %}

{% block content %}

    <div class="sub-title-chef">
        <div>
            <h1>Gerenciar Chefs</h1>
        </div>
        <div>
            <a href="/chefs/create">Novo</a>
        </div>
    </div>

    <section class="cards-chefs">
        {% for chef in chefs %}
            <div class="card-chef">
                <div class="card-image-container-chef">
                        <img src="{{chef.avatar_url}}" alt="imagem de {{chef.name}}">
                </div>

                <div class="card-text-chef">
                    
                    <div class="card-content-chef">
                        <p>{{chef.name}}</p>
                    </div>

                    <div>
                        <a href="/chefs/{{chef.id}}" class="view-chef">Visualizar</a>
                    </div>
                                       
                </div>  
            </div>

        {% endfor %}
    </section>

    <div 
            class="pagination" 
            data-page={{pagination.page}} 
            data-total={{pagination.total}} 
            data-filter={{filter}}
            ></div>

    <script>
        function paginate(selectedPage, totalPages) {
            let pages = [],
                oldPage

            for (let currentPage = 1; currentPage <= totalPages; currentPage++) {

                const firstAndLastPage = currentPage == 1 || currentPage == totalPages
                const pagesAfterSelectedPage = currentPage <= selectedPage + 2
                const pagesBeforeSelectedPage = currentPage >= selectedPage - 2

                if (firstAndLastPage || pagesBeforeSelectedPage && pagesAfterSelectedPage) {

                    if (oldPage && currentPage - oldPage > 2) {
                        pages.push("...")
                    }

                    if (oldPage && currentPage - oldPage == 2) {
                        pages.push(oldPage + 1)
                    }

                    pages.push(currentPage)
                    oldPage = currentPage
                }
            }

            return pages
        }

        function createPagination(pagination) {
            const filter = pagination.dataset.filter
            const page = + pagination.dataset.page
            const total = + pagination.dataset.total
            const pages = paginate(page, total)

            let elements = ""

            for (let page of pages) {
                if (String(page).includes('...')) {
                    elements += `<span>${page}</span>`
                } else {
                    if (filter) {
                        elements += `<a href="?page=${page}&filter=${filter}">${page}</a>`
                    } else {
                        elements += `<a href="?page=${page}">${page}</a>`
                    }
                }
            }

            pagination.innerHTML = elements
        }

        const pagination = document.querySelector(".pagination")

        if (pagination) {
            createPagination(pagination)
        }
    </script>

{% endblock content %}